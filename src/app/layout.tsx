import type {Metadata} from "next";
import {Geist, Geist_Mono} from "next/font/google";
import "./globals.css";
import Header from "@/components/layouts/Header/Header";
import {cookies} from "next/headers";
import {SsrApiClient} from "@/lib/api/client/SsrApiClient";
import {User} from "@/types/user";
import {handleApiError} from "@/lib/api/errorHandler";

const geistSans = Geist({
    variable: "--font-geist-sans",
    subsets: ["latin"],
});

const geistMono = Geist_Mono({
    variable: "--font-geist-mono",
    subsets: ["latin"],
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default async function RootLayout({
                                             children,
                                         }: Readonly<{
    children: React.ReactNode;
}>) {
    const cookieStore = await cookies();
    const accessToken = cookieStore.get('access_token')?.value;

    let user: User | null = null;
    const apiClient = new SsrApiClient({accessToken})
    try {
        user = await apiClient.fetchCurrentUser();
    } catch (error) {
        const { statusCode } = handleApiError(error);
        if (statusCode === 401) {
            user = null;
        } else {
            throw error;
        }
    }

    return (
        <html lang="ja">
        <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
        <Header user={user}/>
        <main className="min-h-screen bg-gray-50 px-4 pt-24">
            {children}
        </main>
        </body>
        </html>
    );
}
